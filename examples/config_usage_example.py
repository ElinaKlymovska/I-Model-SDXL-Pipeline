#!/usr/bin/env python3
"""
Configuration Usage Examples
–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—è –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –Ω–æ–≤–æ—ó YAML-based –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ–π–Ω–æ—ó —Å–∏—Å—Ç–µ–º–∏.
"""

import sys
from pathlib import Path

# Add parent directory to Python path for imports
sys.path.insert(0, str(Path(__file__).parent.parent))

from core.config_manager import get_config_manager

def example_basic_usage():
    """–ë–∞–∑–æ–≤–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è ConfigManager"""
    print("üîß –ü—Ä–∏–∫–ª–∞–¥ 1: –ë–∞–∑–æ–≤–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è ConfigManager")
    print("="*50)
    
    # –û—Ç—Ä–∏–º–∞—Ç–∏ –≥–ª–æ–±–∞–ª—å–Ω–∏–π ConfigManager
    config = get_config_manager()
    
    # –û—Ç—Ä–∏–º–∞—Ç–∏ default –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è pipeline
    defaults = config.get_default_pipeline_config()
    print(f"üì¶ Default SDXL –º–æ–¥–µ–ª—å: {defaults.sdxl_model}")
    print(f"üëÅÔ∏è Default face detection: {defaults.face_detection_model}")
    print(f"üé≠ Default —Ç–∏–ø –ø–µ—Ä—Å–æ–Ω–∞–∂–∞: {defaults.character_type}")
    print(f"‚ö° Default —Ä—ñ–≤–µ–Ω—å –ø–æ–∫—Ä–∞—â–µ–Ω–Ω—è: {defaults.enhancement_level}")
    print(f"üé® Default —è–∫—ñ—Å—Ç—å: {defaults.quality_preset}")
    print()

def example_model_presets():
    """–†–æ–±–æ—Ç–∞ –∑ model presets"""
    print("üéØ –ü—Ä–∏–∫–ª–∞–¥ 2: Model Presets")
    print("="*30)
    
    config = get_config_manager()
    
    # –û—Ç—Ä–∏–º–∞—Ç–∏ –º–æ–¥–µ–ª—ñ –¥–ª—è —Ä—ñ–∑–Ω–∏—Ö presets
    presets = ['basic', 'advanced', 'professional']
    
    for preset in presets:
        models = config.get_model_preset_models(preset)
        print(f"{preset.upper():>12}: {', '.join(models)}")
    print()

def example_available_models():
    """–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –º–æ–¥–µ–ª–µ–π"""
    print("üì¶ –ü—Ä–∏–∫–ª–∞–¥ 3: –î–æ—Å—Ç—É–ø–Ω—ñ –º–æ–¥–µ–ª—ñ")
    print("="*35)
    
    config = get_config_manager()
    
    # SDXL –º–æ–¥–µ–ª—ñ
    sdxl_models = config.get_available_models()
    print("üé® SDXL –º–æ–¥–µ–ª—ñ:")
    for model in sdxl_models:
        model_info = config.get_model_info(model)
        speciality = model_info.get('speciality', 'general')
        print(f"  ‚Ä¢ {model} - {speciality}")
    
    print()
    
    # Face detection –º–æ–¥–µ–ª—ñ
    face_models = config.get_available_face_models()
    print("üëÅÔ∏è Face detection –º–æ–¥–µ–ª—ñ:")
    for model in face_models:
        print(f"  ‚Ä¢ {model}")
    print()

def example_enhancement_settings():
    """–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Ä—ñ–≤–Ω—ñ–≤ –ø–æ–∫—Ä–∞—â–µ–Ω–Ω—è"""
    print("‚ö° –ü—Ä–∏–∫–ª–∞–¥ 4: –†—ñ–≤–Ω—ñ –ø–æ–∫—Ä–∞—â–µ–Ω–Ω—è")
    print("="*35)
    
    config = get_config_manager()
    
    levels = ['light', 'medium', 'strong', 'extreme']
    
    for level in levels:
        settings = config.get_enhancement_level_settings(level)
        print(f"{level.upper():>8}: denoising={settings.get('denoising_strength', 'N/A')}, "
              f"cfg={settings.get('cfg_scale', 'N/A')}, "
              f"steps={settings.get('steps', 'N/A')}")
    print()

def example_character_prompts():
    """Character-specific prompts"""
    print("üé≠ –ü—Ä–∏–∫–ª–∞–¥ 5: Character Prompts")
    print("="*35)
    
    config = get_config_manager()
    
    characters = ['female_portrait', 'male_portrait', 'child_portrait']
    
    for character in characters:
        prompts = config.get_character_prompts(character)
        positive = prompts.get('positive', '')[:80] + '...' if len(prompts.get('positive', '')) > 80 else prompts.get('positive', '')
        print(f"{character:>15}: {positive}")
    print()

def example_adetailer_settings():
    """ADetailer quality presets"""
    print("üé® –ü—Ä–∏–∫–ª–∞–¥ 6: ADetailer Quality Presets")
    print("="*40)
    
    config = get_config_manager()
    
    presets = ['conservative', 'balanced', 'aggressive']
    
    for preset in presets:
        settings = config.get_adetailer_settings(preset)
        print(f"{preset.upper():>12}: confidence={settings.get('confidence', 'N/A')}, "
              f"denoising={settings.get('denoising_strength', 'N/A')}, "
              f"padding={settings.get('mask_padding', 'N/A')}")
    print()

def example_webui_config():
    """WebUI –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è"""
    print("üåê –ü—Ä–∏–∫–ª–∞–¥ 7: WebUI Configuration")
    print("="*35)
    
    config = get_config_manager()
    
    webui_config = config.get_webui_config()
    print(f"üîó URL: {config.get_webui_url()}")
    print(f"üìç Port: {webui_config.port}")
    print(f"‚è±Ô∏è Timeout: {webui_config.api_timeout}s")
    print(f"üîÑ Max retries: {webui_config.max_retries}")
    print(f"üéöÔ∏è Default sampler: {webui_config.sampler}")
    print(f"‚öôÔ∏è Default CFG: {webui_config.cfg_scale}")
    print(f"üë£ Default steps: {webui_config.steps}")
    print()

def example_config_validation():
    """–í–∞–ª—ñ–¥–∞—Ü—ñ—è –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó"""
    print("‚úÖ –ü—Ä–∏–∫–ª–∞–¥ 8: –í–∞–ª—ñ–¥–∞—Ü—ñ—è –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó")
    print("="*40)
    
    config = get_config_manager()
    
    issues = config.validate_config()
    
    if issues:
        print("‚ö†Ô∏è –ó–Ω–∞–π–¥–µ–Ω—ñ –ø—Ä–æ–±–ª–µ–º–∏ –≤ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó:")
        for issue in issues:
            print(f"  ‚Ä¢ {issue}")
    else:
        print("‚úÖ –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è –≤–∞–ª—ñ–¥–Ω–∞ - –≤—Å—ñ —Ñ–∞–π–ª–∏ –∑–Ω–∞–π–¥–µ–Ω—ñ!")
    print()

def example_environment_overrides():
    """Environment variable overrides"""
    print("üåç –ü—Ä–∏–∫–ª–∞–¥ 9: Environment Overrides")
    print("="*40)
    
    config = get_config_manager()
    
    # –ü—Ä–∏–∫–ª–∞–¥ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å –∑ environment
    webui_url = config.get_env_setting('WEBUI_API_URL', 'default_url')
    api_key = config.get_env_setting('RUNPOD_API_KEY', 'not_set')
    
    print(f"üîó WebUI URL (env): {webui_url}")
    print(f"üîë API Key set: {'Yes' if api_key != 'not_set' else 'No'}")
    print()

def example_recommended_face_model():
    """–†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω—ñ face models –¥–ª—è —Ä—ñ–∑–Ω–∏—Ö –≤–∏–ø–∞–¥–∫—ñ–≤"""
    print("üëÅÔ∏è –ü—Ä–∏–∫–ª–∞–¥ 10: –†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω—ñ Face Models")
    print("="*45)
    
    config = get_config_manager()
    
    use_cases = ['preview', 'production', 'professional', 'critical_work']
    
    for use_case in use_cases:
        recommended = config.get_recommended_face_model(use_case)
        print(f"{use_case:>15}: {recommended}")
    print()

def main():
    """–ó–∞–ø—É—Å—Ç–∏—Ç–∏ –≤—Å—ñ –ø—Ä–∏–∫–ª–∞–¥–∏"""
    print("üéØ Configuration Manager - –ü—Ä–∏–∫–ª–∞–¥–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è")
    print("="*60)
    print()
    
    examples = [
        example_basic_usage,
        example_model_presets,
        example_available_models,
        example_enhancement_settings,
        example_character_prompts,
        example_adetailer_settings,
        example_webui_config,
        example_config_validation,
        example_environment_overrides,
        example_recommended_face_model
    ]
    
    for i, example_func in enumerate(examples, 1):
        try:
            example_func()
        except Exception as e:
            print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –≤ –ø—Ä–∏–∫–ª–∞–¥—ñ {i}: {e}")
            print()
    
    print("üéâ –í—Å—ñ –ø—Ä–∏–∫–ª–∞–¥–∏ –∑–∞–≤–µ—Ä—à–µ–Ω—ñ!")
    print()
    print("üí° –î–ª—è –∑–º—ñ–Ω–∏ defaults - —Ä–µ–¥–∞–≥—É–π—Ç–µ config/pipeline_settings.yaml")
    print("üîß –î–ª—è –∑–º—ñ–Ω–∏ –º–æ–¥–µ–ª–µ–π - —Ä–µ–¥–∞–≥—É–π—Ç–µ config/models.yaml")
    print("üé® –î–ª—è –∑–º—ñ–Ω–∏ –ø—Ä–æ–º–ø—Ç—ñ–≤ - —Ä–µ–¥–∞–≥—É–π—Ç–µ config/prompt_settings.yaml")

if __name__ == "__main__":
    main()